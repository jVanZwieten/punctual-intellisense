{
    "name": "punctual-intellisense",
    "displayName": "Punctual Intellisense",
    "description": "Adds to VSCode the classic VS experience of accepting autocomplete suggestions through use of  punctuation keys such as '.'",
    "version": "0.0.1",
    "publisher": "johnvanzwieten",
    "engines": {
        "vscode": "^1.17.0"
    },
    "categories": [
        "Other"
    ],
    "activationEvents": [
        "*"
    ],
    "main": "./out/extension",
    "contributes": {
        "commands": [
            {
                "command": "extension.acceptAndTypeForward",
                "title": "Hello World"
            }
        ],
        "keybindings": [
            {
                "command": "extension.acceptAndType.",
                "key": ".",
                "when": "editorTextFocus && suggestWidgetVisible"
            },
            {
                "command": "extension.acceptAndType,",
                "key": ",",
                "when": "editorTextFocus && suggestWidgetVisible"
            },
            {
                "command": "extension.acceptAndType!",
                "key": "shift+1",
                "when": "editorTextFocus && suggestWidgetVisible"
            },
            {
                "command": "extension.acceptAndType@",
                "key": "shift+2",
                "when": "editorTextFocus && suggestWidgetVisible"
            },
            {
                "command": "extension.acceptAndType#",
                "key": "shift+3",
                "when": "editorTextFocus && suggestWidgetVisible"
            },
            {
                "command": "extension.acceptAndType%",
                "key": "shift+5",
                "when": "editorTextFocus && suggestWidgetVisible"
            },
            {
                "command": "extension.acceptAndType^",
                "key": "shift+6",
                "when": "editorTextFocus && suggestWidgetVisible"
            },
            {
                "command": "extension.acceptAndType&",
                "key": "shift+7",
                "when": "editorTextFocus && suggestWidgetVisible"
            },
            {
                "command": "extension.acceptAndType*",
                "key": "shift+8",
                "when": "editorTextFocus && suggestWidgetVisible"
            },
            {
                "command": "extension.acceptAndType(",
                "key": "shift+9",
                "when": "editorTextFocus && suggestWidgetVisible"
            },
            {
                "command": "extension.acceptAndType)",
                "key": "shift+0",
                "when": "editorTextFocus && suggestWidgetVisible"
            },
            {
                "command": "extension.acceptAndType-",
                "key": "-",
                "when": "editorTextFocus && suggestWidgetVisible"
            },
            {
                "command": "extension.acceptAndType=",
                "key": "=",
                "when": "editorTextFocus && suggestWidgetVisible"
            },
            {
                "command": "extension.acceptAndType+",
                "key": "shift+=",
                "when": "editorTextFocus && suggestWidgetVisible"
            },
            {
                "command": "extension.acceptAndType[",
                "key": "[",
                "when": "editorTextFocus && suggestWidgetVisible"
            },
            {
                "command": "extension.acceptAndType]",
                "key": "]",
                "when": "editorTextFocus && suggestWidgetVisible"
            },
            {
                "command": "extension.acceptAndType{",
                "key": "shift+[",
                "when": "editorTextFocus && suggestWidgetVisible"
            },
            {
                "command": "extension.acceptAndType}",
                "key": "shift+]",
                "when": "editorTextFocus && suggestWidgetVisible"
            },
            {
                "command": "extension.acceptAndType<",
                "key": "shift+,",
                "when": "editorTextFocus && suggestWidgetVisible"
            },
            {
                "command": "extension.acceptAndType>",
                "key": "shift+.",
                "when": "editorTextFocus && suggestWidgetVisible"
            },
            {
                "command": "extension.acceptAndType/",
                "key": "/",
                "when": "editorTextFocus && suggestWidgetVisible"
            },
            {
                "command": "extension.acceptAndType?",
                "key": "shift+/",
                "when": "editorTextFocus && suggestWidgetVisible"
            },
            {
                "command": "extension.acceptAndType|",
                "key": "shift+\\",
                "when": "editorTextFocus && suggestWidgetVisible"
            },
            {
                "command": "extension.acceptAndType~",
                "key": "shift+`",
                "when": "editorTextFocus && suggestWidgetVisible"
            },
            {
                "command": "extension.acceptAndType;",
                "key": ";",
                "when": "editorTextFocus && suggestWidgetVisible"
            },
            {
                "command": "extension.acceptAndType:",
                "key": "shift+;",
                "when": "editorTextFocus && suggestWidgetVisible"
            },
            {
                "command": "extension.acceptAndType ",
                "key": "space",
                "when": "editorTextFocus && suggestWidgetVisible"
            }
        ],
        "configuration": {
            "title": "Punctual Intellisense configuration",
            "properties": {
                "typeForwardKeys": {
                    "type": "array",
                    "default": [".",",","!","@","#","%","^","&","*","(",")","-", "=","+","[","]","{","}","<",">","/","?","|","~",";",":"," "],
                    "description": "Array of keys which will accept an Intellisense suggestion before being typed. Must have a corresponding keybinding to be honored. All default keys have keybindings available already, new bindings must be manually added for any new keys."
                }
            }
        }
    },
    "scripts": {
        "vscode:prepublish": "npm run compile",
        "compile": "tsc -p ./",
        "watch": "tsc -watch -p ./",
        "postinstall": "node ./node_modules/vscode/bin/install",
        "test": "npm run compile && node ./node_modules/vscode/bin/test"
    },
    "devDependencies": {
        "typescript": "^2.5.3",
        "vscode": "^1.1.5",
        "@types/node": "^7.0.43",
        "@types/mocha": "^2.2.42"
    }
}